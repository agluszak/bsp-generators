package org.jetbrains.bsp.tests

import com.google.gson.Gson
import com.google.gson.GsonBuilder
import com.google.gson.reflect.TypeToken
import org.jetbrains.bsp.bsp4kt.*
import kotlin.reflect.KClass

// TODO Kasia: move it to some file and make it generate automatically
val structureMap = mapOf<String, KClass<*>>(
    "Range" to Range::class,
    "CompileResult" to CompileResult::class,
    "DiagnosticCode" to DiagnosticCode::class,
    "WorkspaceBuildTargetsResult" to WorkspaceBuildTargetsResult::class,
    "TestFinish" to TestFinish::class,
    "DependencySourcesResult" to DependencySourcesResult::class,
//        "InitializeBuildParamsData" to InitializeBuildParamsData::class,
    "BuildTargetTag" to BuildTargetTag::class,
    "Position" to Position::class,
    "BspConnectionDetails" to BspConnectionDetails::class,
    "TestProvider" to TestProvider::class,
    "RunParams" to RunParams::class,
    "InverseSourcesParams" to InverseSourcesParams::class,
    "TaskProgressParams" to TaskProgressParams::class,
    "PrintParams" to PrintParams::class,
    "TaskStartParams" to TaskStartParams::class,
    "OutputPathsResult" to OutputPathsResult::class,
    "CompileReport" to CompileReport::class,
    "BuildTargetIdentifier" to BuildTargetIdentifier::class,
    "DiagnosticTag" to DiagnosticTag::class,
    "TestStatus" to TestStatus::class,
    "BuildServer" to BuildServer::class,
    "ResourcesItem" to ResourcesItem::class,
    "OutputPathsItem" to OutputPathsItem::class,
//        "RunParamsData" to RunParamsData::class,
//        "TestParamsData" to TestParamsData::class,
    "RunResult" to RunResult::class,
    "ResourcesResult" to ResourcesResult::class,
    "CompileTask" to CompileTask::class,
    "CleanCacheResult" to CleanCacheResult::class,
    "TestReport" to TestReport::class,
//        "InitializeBuildResultData" to InitializeBuildResultData::class,
//        "DebugSessionParamsData" to DebugSessionParamsData::class,
    "TaskId" to TaskId::class,
    "BuildClient" to BuildClient::class,
//        "BuildTargetData" to BuildTargetData::class,
//        "TaskFinishData" to TaskFinishData::class,
    "BuildClientCapabilities" to BuildClientCapabilities::class,
    "SourceItemKind" to SourceItemKind::class,
    "InverseSourcesResult" to InverseSourcesResult::class,
    "SourcesResult" to SourcesResult::class,
    "BuildTargetEventKind" to BuildTargetEventKind::class,
    "BuildTargetCapabilities" to BuildTargetCapabilities::class,
    "OutputPathsParams" to OutputPathsParams::class,
    "DependencyModulesItem" to DependencyModulesItem::class,
    "DiagnosticSeverity" to DiagnosticSeverity::class,
//        "TestFinishData" to TestFinishData::class,
    "DebugProvider" to DebugProvider::class,
    "CleanCacheParams" to CleanCacheParams::class,
    "SourcesParams" to SourcesParams::class,
    "TestTask" to TestTask::class,
    "SourceItem" to SourceItem::class,
    "BuildTargetEvent" to BuildTargetEvent::class,
    "ResourcesParams" to ResourcesParams::class,
//        "TaskProgressData" to TaskProgressData::class,
    "MessageType" to MessageType::class,
    "DependencyModulesResult" to DependencyModulesResult::class,
    "DiagnosticRelatedInformation" to DiagnosticRelatedInformation::class,
    "CodeDescription" to CodeDescription::class,
    "SourcesItem" to SourcesItem::class,
    "TextDocumentIdentifier" to TextDocumentIdentifier::class,
    "BuildTarget" to BuildTarget::class,
    "InitializeBuildParams" to InitializeBuildParams::class,
    "RunProvider" to RunProvider::class,
    "DependencyModule" to DependencyModule::class,
    "DidChangeBuildTarget" to DidChangeBuildTarget::class,
    "BuildServerCapabilities" to BuildServerCapabilities::class,
//        "DiagnosticData" to DiagnosticData::class,
    "TaskFinishParams" to TaskFinishParams::class,
    "StatusCode" to StatusCode::class,
    "LogMessageParams" to LogMessageParams::class,
//        "CompileResultData" to CompileResultData::class,
    "TestResult" to TestResult::class,
    "OutputPathItem" to OutputPathItem::class,
    "DebugSessionParams" to DebugSessionParams::class,
    "DependencySourcesParams" to DependencySourcesParams::class,
//        "DependencyModuleData" to DependencyModuleData::class,
    "CompileProvider" to CompileProvider::class,
    "CompileParams" to CompileParams::class,
    "InitializeBuildResult" to InitializeBuildResult::class,
//        "TaskStartData" to TaskStartData::class,
    "DependencyModulesParams" to DependencyModulesParams::class,
    "ReadParams" to ReadParams::class,
    "Location" to Location::class,
    "OutputPathItemKind" to OutputPathItemKind::class,
    "DependencySourcesItem" to DependencySourcesItem::class,
//        "TestResultData" to TestResultData::class,
    "TestStart" to TestStart::class,
    "PublishDiagnosticsParams" to PublishDiagnosticsParams::class,
//        "BuildTargetEventData" to BuildTargetEventData::class,
    "TestParams" to TestParams::class,
    "DebugSessionAddress" to DebugSessionAddress::class,
    "Diagnostic" to Diagnostic::class,
    "ShowMessageParams" to ShowMessageParams::class,
    "RequestId" to RequestId::class,
    "CancelRequestParams" to CancelRequestParams::class,
    "CancelExtension" to CancelExtension::class,
    "SetCargoFeaturesResult" to SetCargoFeaturesResult::class,
    "SetCargoFeaturesParams" to SetCargoFeaturesParams::class,
    "PackageFeatures" to PackageFeatures::class,
    "CargoBuildTarget" to CargoBuildTarget::class,
    "CargoBuildServer" to CargoBuildServer::class,
    "CargoFeaturesStateResult" to CargoFeaturesStateResult::class,
    "CppOptionsResult" to CppOptionsResult::class,
    "CppOptionsParams" to CppOptionsParams::class,
    "CppOptionsItem" to CppOptionsItem::class,
    "CppBuildTarget" to CppBuildTarget::class,
    "CppBuildServer" to CppBuildServer::class,
    "JavacOptionsResult" to JavacOptionsResult::class,
    "JavaBuildServer" to JavaBuildServer::class,
    "JavacOptionsItem" to JavacOptionsItem::class,
    "JavacOptionsParams" to JavacOptionsParams::class,
    "JvmTestEnvironmentResult" to JvmTestEnvironmentResult::class,
    "JvmBuildServer" to JvmBuildServer::class,
    "JvmBuildTarget" to JvmBuildTarget::class,
    "JvmTestEnvironmentParams" to JvmTestEnvironmentParams::class,
    "JvmRunEnvironmentResult" to JvmRunEnvironmentResult::class,
    "JvmMainClass" to JvmMainClass::class,
    "JvmRunEnvironmentParams" to JvmRunEnvironmentParams::class,
    "JvmEnvironmentItem" to JvmEnvironmentItem::class,
    "MavenDependencyModuleArtifact" to MavenDependencyModuleArtifact::class,
    "MavenDependencyModule" to MavenDependencyModule::class,
    "PythonBuildTarget" to PythonBuildTarget::class,
    "PythonOptionsResult" to PythonOptionsResult::class,
    "PythonBuildServer" to PythonBuildServer::class,
    "PythonOptionsItem" to PythonOptionsItem::class,
    "PythonOptionsParams" to PythonOptionsParams::class,
    "RustPackage" to RustPackage::class,
    "RustWorkspaceParams" to RustWorkspaceParams::class,
    "RustDepKindInfo" to RustDepKindInfo::class,
    "RustTargetKind" to RustTargetKind::class,
    "RustCrateType" to RustCrateType::class,
    "RustBuildServer" to RustBuildServer::class,
    "RustDepKind" to RustDepKind::class,
    "RustTarget" to RustTarget::class,
    "RustRawDependency" to RustRawDependency::class,
    "RustDependency" to RustDependency::class,
    "RustEdition" to RustEdition::class,
    "RustWorkspaceResult" to RustWorkspaceResult::class,
    "RustPackageOrigin" to RustPackageOrigin::class,
    "SbtBuildTarget" to SbtBuildTarget::class,
    "ScalaTestSuiteSelection" to ScalaTestSuiteSelection::class,
    "ScalaMainClassesParams" to ScalaMainClassesParams::class,
    "ScalaTextEdit" to ScalaTextEdit::class,
    "ScalaBuildTarget" to ScalaBuildTarget::class,
    "ScalacOptionsResult" to ScalacOptionsResult::class,
    "ScalaMainClass" to ScalaMainClass::class,
    "ScalaMainClassesResult" to ScalaMainClassesResult::class,
    "ScalacOptionsItem" to ScalacOptionsItem::class,
    "ScalaWorkspaceEdit" to ScalaWorkspaceEdit::class,
    "ScalacOptionsParams" to ScalacOptionsParams::class,
    "ScalaTestClassesResult" to ScalaTestClassesResult::class,
    "ScalaBuildServer" to ScalaBuildServer::class,
    "ScalaMainClassesItem" to ScalaMainClassesItem::class,
    "ScalaTestParams" to ScalaTestParams::class,
    "ScalaTestSuites" to ScalaTestSuites::class,
    "ScalaTestClassesParams" to ScalaTestClassesParams::class,
    "ScalaAction" to ScalaAction::class,
    "ScalaTestClassesItem" to ScalaTestClassesItem::class,
    "ScalaAttachRemote" to ScalaAttachRemote::class,
    "ScalaDiagnostic" to ScalaDiagnostic::class,
    "ScalaPlatform" to ScalaPlatform::class,
)

const val TERMINAL_STRING = "exit"

data class DataWrapper(val name: String, val jsonData: String)

fun main() {
    val gson: Gson = GsonBuilder().create()

    while (true) {
        val inputLine = readlnOrNull() ?: break
        if (inputLine == TERMINAL_STRING) break

        val wrapper = gson.fromJson(inputLine, DataWrapper::class.java)

        val kClassOrNull = structureMap[wrapper.name]
        if (kClassOrNull == null) {
            println("Type '" + wrapper.name + "' not known")
            continue
        }

        val instance = gson.fromJson<Any>(wrapper.jsonData, TypeToken.get(kClassOrNull.java).type)

        println(gson.toJson(instance))
    }
}
